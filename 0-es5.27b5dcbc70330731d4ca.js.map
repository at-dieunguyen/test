{"version":3,"sources":["webpack:///src/app/shared/layout/account2/account2.component.html","webpack:///src/app/shared/layout/account2/account2-routing.module.ts","webpack:///src/app/shared/layout/account2/account2.component.scss","webpack:///src/app/shared/layout/account2/account2.component.ts","webpack:///src/app/shared/layout/account2/account2.module.ts","webpack:///src/app/shared/services/api.service.ts"],"names":["routes","path","component","children","loadChildren","then","m","Profile2Module","Dashboard2Module","Account2RoutingModule","imports","forChild","exports","Account2Component","auth","apiSer","get","users","page","subscribe","e","data","getAssets","console","log","logout","selector","template","Account2Module","declarations","ENDPOINT","register","API_DOMAIN","api","ApiService","http","url","params","pipe","handleError","post","put","observe","error","ErrorEvent","message","status","providedIn"],"mappings":"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","file":"0-es5.27b5dcbc70330731d4ca.js","sourcesContent":["export default \"<div class=\\\"container\\\">\\n  <h1>Account2 page</h1>\\n  <a routerLink=\\\"/account2/profile2\\\">Profile2</a><br>\\n  <a routerLink=\\\"/account2/dashboard2\\\">Dashboard2</a><br>\\n  <button class=\\\"btn btn-primary\\\" (click)=\\\"logout()\\\">Log out</button>\\n\\n  <ul *ngFor=\\\"let dt of data\\\">\\n    <li>Email: {{ dt.email }}</li>\\n  </ul>\\n  <router-outlet></router-outlet>\\n</div>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { Account2Component } from './account2.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: Account2Component,\n    children: [\n      {\n        path: 'profile2',\n        loadChildren: () => import('./profile2/profile2.module').then(m => m.Profile2Module)\n      },\n      {\n        path: 'dashboard2',\n        loadChildren: () => import('./dashboard2/dashboard2.module').then(m => m.Dashboard2Module)\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class Account2RoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9sYXlvdXQvYWNjb3VudDIvYWNjb3VudDIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenService } from '../../services/authen.service';\nimport { ApiService, ENDPOINT } from '../../services/api.service';\n\n@Component({\n  selector: 'app-account2',\n  templateUrl: './account2.component.html',\n  styleUrls: ['./account2.component.scss']\n})\nexport class Account2Component implements OnInit {\n\n  data: any;\n\n  constructor(\n    private auth: AuthenService,\n    private apiSer: ApiService\n  ) { }\n\n  ngOnInit(): void {\n    this.apiSer.get(ENDPOINT.users, {page: 2}).subscribe(e => {\n      // console.log(e);\n      this.data = e.data;\n    });\n    this.apiSer.getAssets('../../../../assets/events.json').subscribe(e => {\n      console.log(e);\n    });\n    this.apiSer.get(ENDPOINT.users).subscribe(e => {\n      // console.log(e);\n      // this.data = e.data;\n    });\n  }\n\n  logout(){\n    this.auth.logout();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { Account2RoutingModule } from './account2-routing.module';\nimport { Account2Component } from './account2.component';\n\n\n@NgModule({\n  declarations: [Account2Component],\n  imports: [\n    CommonModule,\n    Account2RoutingModule\n  ]\n})\nexport class Account2Module { }\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { environment } from './../../../environments/environment';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators'\n\nexport const ENDPOINT = {\n  users: 'users',\n  register: 'register'\n};\nexport const API_DOMAIN = environment.api;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n  /**\n * Get api\n * @param url : path from ENDPOINT\n * @param params : ex: {key: value}\n */\n  get(url: string, params?: any): Observable<any> {\n    return this.http.get(API_DOMAIN + url, {\n      params: params\n    }).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  /**\n  * Post api\n  * @param url : path from ENDPOINT\n  * @param params : ex: {key: value}\n  */\n  post(url: string, params?: any): Observable<any> {\n    return this.http.post(API_DOMAIN + url, params).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  /**\n  * Put api\n  * @param url : path from ENDPOINT\n  * @param params : ex: {key: value}\n  */\n  put(url: string, params?: any): Observable<any> {\n    return this.http.put(API_DOMAIN + url, params).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  /**\n  * Get file from assets folder\n  * @param url : path from assets folder\n  */\n  getAssets(url: string): Observable<any> {\n    return this.http.get(url).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  /**\n  * Get api with full response\n  * include: headers, body, ...\n  * @param url : string\n  */\n  getConfigResponse(url: string): Observable<HttpResponse<any>> {\n    return this.http.get(API_DOMAIN + url, { observe: 'response' }).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  /**\n  * Handle error from Response\n  * @param error: any\n  */\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError(\n      'Something bad happened; please try again later.');\n  }\n}\n"]}